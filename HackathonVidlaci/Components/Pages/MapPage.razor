@using HackathonVidlaci.Classes
@using System.Diagnostics
@inject IJSRuntime Js
@inject HradyContext hradyContext
@inject HrobyContext hrobyContext
@inject DivadlaContext divadlaContext
@inject ZamkyContext zamkyContext
@inject KulturniDomyContext kulturniDomyContext
@inject TechnickePamatkyContext technickePamatkyContext
@rendermode InteractiveServer


<div>
    <button @onclick="ReadDB">Set</button>
    <p>huhuhuhuhuhu</p>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js"></script>
   
   
    <script>
        var map = L.map('map').setView([51.505, -0.09], 13); // Default location (London)

        // Load and display a tile layer on the map (OpenStreetMap tiles)
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: '© OpenStreetMap contributors'
        }).addTo(map);

        // Check if geolocation is available
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function (position) {
                // Get user's current coordinates
                var lat = position.coords.latitude;
                var lon = position.coords.longitude;

                // Update the map to the user's location
                map.setView([lat, lon], 13);

                // Add a marker at the user's current location
                L.marker([lat, lon]).addTo(map)
                    .bindPopup("You are here!")
                    .openPopup();
            }, function (error) {
                alert("Unable to retrieve your location: " + error.message);
            });
        } else {
            alert("Geolocation is not supported by this browser.");
        }
    </script>
    <script>
        function AddMarker(lat,lon,col){
            L.marker([lat, lon]).addTo(map);
            console.log(lon + "__" + lat);
        }
    </script>

</div>

@code {

    public void ReadDB()
    {
        var kult = kulturniDomyContext.Kulturní_domy.ToList();

        foreach(var k in kult)
        {
           
            CreateMarkers(k.y, k.x);
        }

    }

    public void deg()
    {
        CreateMarkers(50.1981917, 15.8647958);
    }




    public async void CreateMarkers(double? lat, double? lon)
    {
        Debug.Print(lat.ToString());
        if(lat is null || lon is null)
        {
            return;
        }

        await Js.InvokeVoidAsync("AddMarker",lat, lon);
    }
}
